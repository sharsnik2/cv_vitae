knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(vitae)
library(tidyverse)
library(lubridate)
library(here)
library(readxl)
library(glue)
library(conflicted)
conflict_prefer("filter", "dplyr")
conflict_prefer("here", "here")
setwd("E:/Git/cv_vitae")
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(vitae)
library(tidyverse)
library(lubridate)
library(here)
library(readxl)
library(glue)
library(conflicted)
conflict_prefer("filter", "dplyr")
conflict_prefer("here", "here")
#setwd("E:/Git/cv_vitae")
# Remember to spell check!!
data_files <- list.files(here("data"), pattern = ".csv", full.names = TRUE)
#spelling::spell_check_files(c("cv_vitae.Rmd", data_files))
# To update CV on my website, run the following code in the console:
rmarkdown::render("cv_vitae.Rmd", output_file = "~/cv.pdf")
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(vitae)
library(tidyverse)
library(lubridate)
library(here)
library(readxl)
library(glue)
library(conflicted)
conflict_prefer("filter", "dplyr")
conflict_prefer("here", "here")
#setwd("E:/Git/cv_vitae")
jobs.raw <- read_csv(here::here("data", "jobs.csv"))
jobs <-
jobs.raw %>%
fill(Start, End, What, With, Where, Tag) %>%
mutate(Start = mdy(Start),
End = mdy(End)) %>%
mutate(When = case_when(
is.na(End) ~ glue("{year(Start)}--Present") %>% as.character(),
year(Start) == year(End) ~ year(End) %>% as.character(),
TRUE ~ glue("{year(Start)}--{year(End)}") %>% as.character()
)) %>%
mutate(End = if_else(is.na(End), today() + years(2), End)) #if no end date specified, set it to two years from now for sorting purposes, i.e. so jobs I'm still doing show up at top.
presentations.raw <- read_csv(here("data", "presentations.csv"))
presentations <-
presentations.raw %>%
mutate(When = mdy(When)) %>%
filter(When < today()) #exclude upcoming talks
development.raw <- read_csv(here("data", "professional development.csv"))
development <-
development.raw %>%
mutate(date = mdy(date))
awards.raw <- read_csv(here("data", "awards and grants.csv"))
awards <- awards.raw %>%
mutate(date = mdy(date)) %>%
arrange(desc(date))
edu.raw <- read_csv(here("data", "education.csv"))
edu <-
edu.raw %>%
mutate(pi = if_else(!is.na(pi), glue("PI: {pi}"), as.character(NA)),
dissertation = glue("\\textbf{[dissertation]}", .open = "[", .close = "]")) %>%
gather( pi, key = "whytype", value = "why")
edu["why"]
outreach.raw <- read_csv(here("data", "outreach.csv"))
outreach <- outreach.raw %>% mutate(sortdate = mdy(sortdate))
detailed_entries(edu,
when = glue("{start_date}--{end_date}"),
what = degree,
where = location,
with = university,
why = why,
.protect = FALSE)
pubs = scholar::get_publications("UGCZ5GAAAAAJ", flush = TRUE) %>%
mutate(author = as.character(author))
pubs$author[which(pubs$journal == "Developmental Cognitive Neuroscience")] =
"R Pei, N Lauharatanahirun, CN Cascio, MB O’Donnell, JT Shope, BG Simons-Morton, JM Vettel, EB Falk"
pubs %>%
# in review
# dplyr::add_row(
#   title = "Changes in tea plant secondary metabolite profiles as a function of leafhopper density and damage",
#   author = "ER Scott, X Li, JP Wei, N Kfoury, J Morimoto, MM Guo*, A Agyei*, A Robbat Jr, S Ahmed, SB Cash, TS Griffin, JR Stepp, WY Han, CM Orians",
#   journal = "Frontiers in Plant Science",
#   number = " ",
#   cites = 0,
#   year = "in review",
#   cid = NA,
#   pubid = NA
#   ) %>%
# add_row(
#   title = "Using the right tool for the job: understanding the difference between unsupervised and supervised analyses of multivariate ecological data",
#   author = "ER Scott, EE Crone",
#   journal = "Oecologia",
#   number = " ",
#   cites = 0,
#   year = "in review",
#   cid = NA,
#   pubid = NA
# ) %>%
arrange(desc(year)) %>%
detailed_entries(
what = title,
when = year,
with = author,
where = journal
)
# bibliography_entries(here("My Publications.bib"), title = NULL)
jobs %>%
filter(Tag == "research") %>%
# arrange(desc(Start)) %>%
arrange(desc(End)) %>%
detailed_entries(
what = What,
when = When,
with = With,
where = Where,
why = Why,
.protect = FALSE
)
jobs %>%
filter(Tag == "teaching", year(Start) > 2005) %>%
arrange(desc(Start)) %>%
detailed_entries(
what = What,
when = When,
with = With,
where = Where,
why = Why, .protect = FALSE
)
## Guest Lectures
# presentations %>%
#   filter(Tag %in% c("lecture")) %>%
#   arrange(desc(When)) %>%
#   detailed_entries(what = Title,
#                    when = glue("{month(When, label = TRUE)} {year(When)}") %>% as.character(),
#                    with = Conference,
#                    where = Location,
#                    why = Award)
awards %>%
filter(tag == "grant") %>%
detailed_entries(what = award, when = glue("{month(date, label = TRUE)} {year(date)}"),
why = amount) %>%
mutate_all(as.character) #%>%
# mutate(with = as.character(with),
#        when = as.character(when),
#        where = as.character(where))
awards %>%
filter(!tag %in% c("failed", "travel", "grant")) %>%
brief_entries(what = award, when = glue("{month(date, label = TRUE)} {year(date)}"), with = with)
## Software
#
# df <- tribble(~what, ~when, ~with, ~where, ~why,
#               "webchem: retrieve chemical information from the web",
#               2020,
#               "E Szöcs, D Muench, J Ranke, ER Scott, J Stanstrup, R Allaway, Tamas Stirling",
#               "https://cran.r-project.org/web/packages/webchem/",
#               "Contributor and maintainer",
#
#               "holodeck: A tidy interface for simulating multivariate data",
#               2018,
#               "ER Scott",
#               "https://cran.r-project.org/web/packages/holodeck/",
#               "Author and maintainer",
#
#               "bumbl: Tools for modeling bumblebee colony growth",
#               2019,
#               "ER Scott, E Crone",
#               "https://github.com/Aariq/bumbl",
#               "Author and maintainer"
#
#               )
#
# df %>%
#   arrange(desc(when)) %>%
#   detailed_entries(what = what, when = when, with = with, where = where, why = why)
presentations %>%
filter(Tag %in% c("talk", "invited")) %>%
arrange(desc(When)) %>%
detailed_entries(what = Title,
when = glue("{month(When, label = TRUE)} {year(When)}"),
with = Conference,
where = Location,
why = Award,
.protect = FALSE)
pubs = scholar::get_publications("asa20tUAAAAJ", flush = TRUE) %>%
mutate(author = as.character(author))
# pubs$author[which(pubs$journal == "Developmental Cognitive Neuroscience")] =
#   "R Pei, N Lauharatanahirun, CN Cascio, MB O’Donnell, JT Shope, BG Simons-Morton, JM Vettel, EB Falk"
pubs %>%
# in review
# dplyr::add_row(
#   title = "Changes in tea plant secondary metabolite profiles as a function of leafhopper density and damage",
#   author = "ER Scott, X Li, JP Wei, N Kfoury, J Morimoto, MM Guo*, A Agyei*, A Robbat Jr, S Ahmed, SB Cash, TS Griffin, JR Stepp, WY Han, CM Orians",
#   journal = "Frontiers in Plant Science",
#   number = " ",
#   cites = 0,
#   year = "in review",
#   cid = NA,
#   pubid = NA
#   ) %>%
# add_row(
#   title = "Using the right tool for the job: understanding the difference between unsupervised and supervised analyses of multivariate ecological data",
#   author = "ER Scott, EE Crone",
#   journal = "Oecologia",
#   number = " ",
#   cites = 0,
#   year = "in review",
#   cid = NA,
#   pubid = NA
# ) %>%
arrange(desc(year)) %>%
detailed_entries(
what = title,
when = year,
with = author,
where = journal
)
# bibliography_entries(here("My Publications.bib"), title = NULL)
detailed_entries(edu,
when = glue("{start_date}--{end_date}"),
what = degree,
where = location,
with = university,
why = why,
.protect = FALSE)
edu.raw <- read_csv(here("data", "education.csv"))
edu <-
edu.raw %>%
mutate(pi = if_else(!is.na(pi), glue("PI: {pi}"), as.character(NA)),
dissertation = glue("\\textbf{[dissertation]}", .open = "[", .close = "]")) %>%
gather( pi, key = "whytype", value = "why")
edu["why"]
edu
edu %>% filter(degree != "N/A")
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(vitae)
library(tidyverse)
library(lubridate)
library(here)
library(readxl)
library(glue)
library(conflicted)
conflict_prefer("filter", "dplyr")
conflict_prefer("here", "here")
#setwd("E:/Git/cv_vitae")
jobs.raw <- read_csv(here::here("data", "jobs.csv"))
jobs <-
jobs.raw %>%
fill(Start, End, What, With, Where, Tag) %>%
mutate(Start = mdy(Start),
End = mdy(End)) %>%
mutate(When = case_when(
is.na(End) ~ glue("{year(Start)}--Present") %>% as.character(),
year(Start) == year(End) ~ year(End) %>% as.character(),
TRUE ~ glue("{year(Start)}--{year(End)}") %>% as.character()
)) %>%
mutate(End = if_else(is.na(End), today() + years(2), End)) #if no end date specified, set it to two years from now for sorting purposes, i.e. so jobs I'm still doing show up at top.
presentations.raw <- read_csv(here("data", "presentations.csv"))
presentations <-
presentations.raw %>%
mutate(When = mdy(When)) %>%
filter(When < today()) #exclude upcoming talks
development.raw <- read_csv(here("data", "professional development.csv"))
development <-
development.raw %>%
mutate(date = mdy(date))
awards.raw <- read_csv(here("data", "awards and grants.csv"))
awards <- awards.raw %>%
mutate(date = mdy(date)) %>%
arrange(desc(date))
edu.raw <- read_csv(here("data", "education.csv"))
edu <-
edu.raw %>%
mutate(pi = if_else(!is.na(pi), glue("PI: {pi}"), as.character(NA)),
dissertation = glue("\\textbf{[dissertation]}", .open = "[", .close = "]")) %>%
gather( pi, key = "whytype", value = "why")
edu = edu %>% filter(degree != "N/A")
edu["why"]
outreach.raw <- read_csv(here("data", "outreach.csv"))
outreach <- outreach.raw %>% mutate(sortdate = mdy(sortdate))
detailed_entries(edu,
when = glue("{start_date}--{end_date}"),
what = degree,
where = location,
with = university,
why = why,
.protect = FALSE)
pubs = scholar::get_publications("asa20tUAAAAJ", flush = TRUE) %>%
mutate(author = as.character(author))
jobs
awards %>%
filter(tag == "grant") %>%
detailed_entries(what = award, when = glue("{month(date, label = TRUE)} {year(date)}")) %>%
mutate_all(as.character) #%>%
# mutate(with = as.character(with),
#        when = as.character(when),
#        where = as.character(where))
awards %>%
filter(tag == "grant") %>%
detailed_entries(what = award, when = glue("{month(date, label = TRUE)} {year(date)}"),
why = "") %>%
mutate_all(as.character) %>%
mutate(why = NA)
#        when = as.character(when),
#        where = as.character(where))
awards %>%
filter(tag == "grant") %>%
detailed_entries(what = award, when = glue("{month(date, label = TRUE)} {year(date)}"),
why = "") %>%
mutate_all(as.character) %>%
mutate(why = as.numeric(why))
mutate(why = NA)
awards %>%
filter(tag == "grant") %>%
detailed_entries(what = award, when = glue("{month(date, label = TRUE)} {year(date)}"),
why = "") %>%
mutate_all(as.character) %>%
mutate(why = as.numeric(why)) %>%
mutate(why = NA)
#        when = as.character(when),
#        where = as.character(where))
awards %>%
filter(tag == "grant") %>%
detailed_entries(what = award, when = glue("{month(date, label = TRUE)} {year(date)}")) %>%
mutate_all(as.character)
awards %>%
filter(tag == "grant") %>%
detailed_entries(what = award, when = glue("{month(date, label = TRUE)} {year(date)}")) %>%
mutate_all(as.character)
# %>%
#   mutate(why = as.numeric(why)) %>%
#   mutate(why = NA)
#        when = as.character(when),
#        where = as.character(where))
